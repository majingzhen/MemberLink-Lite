basePath: /api/v1
definitions:
  common.APIResponse:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 数据
      message:
        description: 消息
        type: string
      trace_id:
        description: 追踪ID
        type: string
    type: object
  common.PageResponse:
    properties:
      list:
        description: 数据列表
      page:
        description: 当前页
        type: integer
      page_size:
        description: 页大小
        type: integer
      pages:
        description: 总页数
        type: integer
      total:
        description: 总数
        type: integer
    type: object
  controllers.AuthURLResponse:
    properties:
      auth_url:
        description: 授权URL
        type: string
    type: object
  controllers.CreateTenantRequest:
    properties:
      domain:
        type: string
      name:
        type: string
      settings:
        additionalProperties: true
        type: object
      tenant_id:
        type: string
    required:
    - domain
    - name
    - tenant_id
    type: object
  controllers.RefreshTokenRequest:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - refresh_token
    type: object

  controllers.SetTenantSettingRequest:
    properties:
      value: {}
    required:
    - value
    type: object
  controllers.UpdateTenantRequest:
    properties:
      domain:
        type: string
      enabled:
        type: boolean
      name:
        type: string
      settings:
        additionalProperties: true
        type: object
    type: object
  models.File:
    properties:
      category:
        type: string
      created_at:
        type: string
      filename:
        type: string
      hash:
        type: string
      id:
        type: integer
      mime_type:
        type: string
      path:
        type: string
      size:
        type: integer
      status:
        type: integer
      tenant_id:
        type: string
      updated_at:
        type: string
      url:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      avatar:
        type: string
      balance:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      last_ip:
        type: string
      last_time:
        type: string
      nickname:
        type: string
      phone:
        type: string
      points:
        type: integer
      status:
        type: integer
      tenant_id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  services.ChangeBalanceRequest:
    description: 余额变动请求参数，用于处理用户余额的增减操作
    properties:
      amount:
        description: 变动金额(分)
        example: 1000
        type: integer
      order_no:
        example: ORDER20240101001
        type: string
      remark:
        example: 用户充值
        type: string
      type:
        enum:
        - recharge
        - consume
        - refund
        - reward
        - deduct
        example: recharge
        type: string
      user_id:
        example: 1
        type: integer
    required:
    - amount
    - type
    - user_id
    type: object
  services.ChangePasswordRequest:
    properties:
      new_password:
        example: newpassword123
        maxLength: 20
        minLength: 6
        type: string
      old_password:
        example: oldpassword123
        type: string
    required:
    - new_password
    - old_password
    type: object
  services.ChangePointsRequest:
    description: 积分变动请求参数，用于处理用户积分的增减操作
    properties:
      expire_days:
        description: 过期天数，0表示永不过期
        example: 365
        type: integer
      order_no:
        example: ORDER20240101001
        type: string
      quantity:
        description: 变动数量
        example: 100
        type: integer
      remark:
        example: 签到奖励
        type: string
      type:
        enum:
        - obtain
        - use
        - expire
        - reward
        - deduct
        example: obtain
        type: string
      user_id:
        example: 1
        type: integer
    required:
    - quantity
    - type
    - user_id
    type: object
  services.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: testuser
        type: string
    required:
    - password
    - username
    type: object
  services.LoginResponse:
    properties:
      tokens:
        $ref: '#/definitions/services.TokenResponse'
      user:
        $ref: '#/definitions/models.User'
    type: object
  services.RegisterRequest:
    properties:
      email:
        example: test@example.com
        type: string
      nickname:
        example: 测试用户
        maxLength: 20
        type: string
      password:
        example: password123
        maxLength: 20
        minLength: 6
        type: string
      phone:
        example: "13800138000"
        type: string
      username:
        example: testuser
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - password
    - phone
    - username
    type: object
  services.TenantConfig:
    properties:
      created_at:
        type: string
      domain:
        type: string
      enabled:
        type: boolean
      name:
        type: string
      settings:
        additionalProperties: true
        type: object
      tenant_id:
        type: string
      updated_at:
        type: string
    type: object
  services.TokenResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
  services.UpdateProfileRequest:
    properties:
      email:
        example: newemail@example.com
        type: string
      nickname:
        example: 新昵称
        maxLength: 20
        type: string
      phone:
        example: "13800138001"
        type: string
    type: object
  services.UploadFileResponse:
    properties:
      filename:
        type: string
      hash:
        type: string
      id:
        type: integer
      size:
        type: integer
      url:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: dev@example.com
    name: 开发团队
    url: https://github.com/your-org/memberlink-lite
  description: 基于 Golang + Vue3 + 微信小程序的高扩展性会员系统基础框架，专注于会员全生命周期自助管理
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://github.com/your-org/memberlink-lite
  title: 高扩展性会员系统基础框架 API
  version: "1.0"
paths:
  /admin/tenants:
    get:
      consumes:
      - application/json
      description: 获取系统中所有租户的配置信息（仅管理员可访问）
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    $ref: '#/definitions/services.TenantConfig'
                  type: object
              type: object
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取所有租户列表
      tags:
      - 租户管理
    post:
      consumes:
      - application/json
      description: 创建新的租户配置（仅管理员可访问）
      parameters:
      - description: 租户信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateTenantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/services.TenantConfig'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "409":
          description: 租户已存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 创建新租户
      tags:
      - 租户管理
  /admin/tenants/{tenant_id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的租户配置（仅管理员可访问）
      parameters:
      - description: 租户ID
        in: path
        name: tenant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 无法删除
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 租户不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 删除租户
      tags:
      - 租户管理
    put:
      consumes:
      - application/json
      description: 更新指定租户的配置信息（仅管理员可访问）
      parameters:
      - description: 租户ID
        in: path
        name: tenant_id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateTenantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/services.TenantConfig'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 租户不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 更新租户配置
      tags:
      - 租户管理
  /api/v1/files:
    get:
      consumes:
      - application/json
      description: 分页获取当前用户的文件列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 文件分类筛选
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/common.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.File'
                        type: array
                    type: object
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取用户文件列表
      tags:
      - 文件管理
  /api/v1/files/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的文件
      parameters:
      - description: 文件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 文件不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 删除文件
      tags:
      - 文件管理
    get:
      consumes:
      - application/json
      description: 根据文件ID获取文件详细信息
      parameters:
      - description: 文件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.File'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 文件不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取文件信息
      tags:
      - 文件管理
  /api/v1/files/{id}/signed-url:
    get:
      consumes:
      - application/json
      description: 获取文件的临时访问签名URL，有效期30分钟
      parameters:
      - description: 文件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回签名URL
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 文件不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取文件签名URL
      tags:
      - 文件管理
  /api/v1/files/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 上传用户头像图片，仅支持JPG和PNG格式，最大5MB
      parameters:
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/services.UploadFileResponse'
              type: object
        "400":
          description: 文件格式或大小错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 上传头像
      tags:
      - 文件管理
  /api/v1/files/image:
    post:
      consumes:
      - multipart/form-data
      description: 上传图片文件，支持JPG、PNG、GIF、WebP格式，最大10MB
      parameters:
      - description: 图片文件
        in: formData
        name: image
        required: true
        type: file
      - default: image
        description: 文件分类
        in: formData
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/services.UploadFileResponse'
              type: object
        "400":
          description: 文件格式或大小错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 上传图片
      tags:
      - 文件管理
  /api/v1/files/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传通用文件，最大50MB
      parameters:
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      - default: general
        description: 文件分类
        in: formData
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/services.UploadFileResponse'
              type: object
        "400":
          description: 文件大小错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 上传文件
      tags:
      - 文件管理
  /asset/balance/change:
    post:
      consumes:
      - application/json
      description: 处理用户余额变动操作，支持充值、消费、退款、奖励、扣除等类型。使用事务确保数据一致性，余额不足时会返回错误
      parameters:
      - description: 余额变动信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.ChangeBalanceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 参数错误：金额格式错误、变动类型无效、余额不足等
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权：Token无效或过期
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 处理用户余额变动
      tags:
      - 资产管理
  /asset/balance/records:
    get:
      consumes:
      - application/json
      description: 分页获取用户的余额变动历史记录，支持按变动类型和时间范围筛选。记录按创建时间倒序排列
      parameters:
      - default: 1
        description: 页码，从1开始
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页数量，最大100
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - description: 变动类型筛选
        enum:
        - recharge
        - consume
        - refund
        - reward
        - deduct
        in: query
        name: type
        type: string
      - description: 开始时间，ISO8601格式
        format: date-time
        in: query
        name: start_time
        type: string
      - description: 结束时间，ISO8601格式
        format: date-time
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 参数错误：页码无效、时间格式错误等
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权：Token无效或过期
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取用户余额变动记录
      tags:
      - 资产管理
  /asset/info:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的余额和积分信息，余额以分为单位存储，同时提供元为单位的浮点数表示
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权：Token无效或过期
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取用户资产信息
      tags:
      - 资产管理
  /asset/points/change:
    post:
      consumes:
      - application/json
      description: 处理用户积分变动操作，支持获得、使用、过期、奖励、扣除等类型。支持设置积分过期时间，使用事务确保数据一致性
      parameters:
      - description: 积分变动信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.ChangePointsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 参数错误：数量格式错误、变动类型无效、积分不足等
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权：Token无效或过期
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 处理用户积分变动
      tags:
      - 资产管理
  /asset/points/records:
    get:
      consumes:
      - application/json
      description: 分页获取用户的积分变动历史记录，支持按变动类型和时间范围筛选。记录按创建时间倒序排列，包含积分过期信息
      parameters:
      - default: 1
        description: 页码，从1开始
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页数量，最大100
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - description: 变动类型筛选
        enum:
        - obtain
        - use
        - expire
        - reward
        - deduct
        in: query
        name: type
        type: string
      - description: 开始时间，ISO8601格式
        format: date-time
        in: query
        name: start_time
        type: string
      - description: 结束时间，ISO8601格式
        format: date-time
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 参数错误：页码无效、时间格式错误等
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权：Token无效或过期
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取用户积分变动记录
      tags:
      - 资产管理
  /auth/login:
    post:
      consumes:
      - application/json
      description: 使用用户名和密码进行登录，返回用户信息和JWT令牌
      parameters:
      - description: 登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/services.LoginResponse'
              type: object
        "400":
          description: 参数验证失败
          schema:
            $ref: '#/definitions/common.APIResponse'
        "403":
          description: 用户已被禁用
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      summary: 用户登录
      tags:
      - 认证管理
  /auth/logout:
    post:
      consumes:
      - application/json
      description: 注销当前登录状态，在实际应用中可以将令牌加入黑名单
      produces:
      - application/json
      responses:
        "200":
          description: 登出成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权访问
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 用户登出
      tags:
      - 认证管理
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: 使用有效的刷新令牌获取新的访问令牌和刷新令牌
      parameters:
      - description: 刷新令牌请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 刷新成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/services.TokenResponse'
              type: object
        "400":
          description: 请求参数格式错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 令牌无效或已过期
          schema:
            $ref: '#/definitions/common.APIResponse'
        "403":
          description: 用户已被禁用
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      summary: 刷新JWT令牌
      tags:
      - 认证管理
  /auth/register:
    post:
      consumes:
      - application/json
      description: 创建新的会员账号，支持用户名、手机号、邮箱注册
      parameters:
      - description: 注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 参数验证失败
          schema:
            $ref: '#/definitions/common.APIResponse'
        "409":
          description: 用户已存在
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      summary: 用户注册
      tags:
      - 认证管理



  /tenant/current:
    get:
      consumes:
      - application/json
      description: 获取当前请求的租户配置信息
      parameters:
      - default: default
        description: 租户ID
        in: header
        name: X-Tenant-ID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/services.TenantConfig'
              type: object
        "404":
          description: 租户不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取当前租户信息
      tags:
      - 租户管理
  /tenant/settings/{key}:
    get:
      consumes:
      - application/json
      description: 获取当前租户的特定设置值
      parameters:
      - description: 设置键名
        in: path
        name: key
        required: true
        type: string
      - default: default
        description: 租户ID
        in: header
        name: X-Tenant-ID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: 设置不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取租户设置
      tags:
      - 租户管理
    put:
      consumes:
      - application/json
      description: 设置当前租户的特定设置值
      parameters:
      - description: 设置键名
        in: path
        name: key
        required: true
        type: string
      - description: 设置值
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SetTenantSettingRequest'
      - default: default
        description: 租户ID
        in: header
        name: X-Tenant-ID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 设置成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 租户不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 设置租户设置
      tags:
      - 租户管理
  /user/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 上传用户头像图片，支持jpg、png格式，文件大小不超过5MB
      parameters:
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: 文件格式或大小错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权访问
          schema:
            $ref: '#/definitions/common.APIResponse'
        "413":
          description: 文件过大
          schema:
            $ref: '#/definitions/common.APIResponse'
        "415":
          description: 不支持的文件类型
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 上传头像
      tags:
      - 会员管理
  /user/password:
    put:
      consumes:
      - application/json
      description: 修改用户登录密码，需要验证旧密码，新密码需要满足强度要求
      parameters:
      - description: 密码信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 修改成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 参数验证失败或旧密码错误
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权访问
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 修改密码
      tags:
      - 会员管理
  /user/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的详细信息，包括基本资料、余额、积分等
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "401":
          description: 未授权访问
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 获取个人信息
      tags:
      - 会员管理
    put:
      consumes:
      - application/json
      description: 更新用户的基本信息，支持修改昵称、邮箱、手机号，会验证邮箱和手机号的唯一性
      parameters:
      - description: 更新信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/common.APIResponse'
        "400":
          description: 参数验证失败
          schema:
            $ref: '#/definitions/common.APIResponse'
        "401":
          description: 未授权访问
          schema:
            $ref: '#/definitions/common.APIResponse'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/common.APIResponse'
        "409":
          description: 手机号或邮箱已存在
          schema:
            $ref: '#/definitions/common.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/common.APIResponse'
      security:
      - BearerAuth: []
      summary: 更新个人信息
      tags:
      - 会员管理
securityDefinitions:
  BearerAuth:
    description: 'JWT令牌认证，格式: Bearer {token}'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
